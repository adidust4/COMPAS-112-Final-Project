# Run this chunk multiple times
sample_n(marbles, size = 3, replace = FALSE, weight = c(0.4, 0.5, 0.1))
# Sample 3 marbles WITHOUT replacement
# Run this chunk multiple times
sample_n(marbles, size = 3, replace = FALSE, weight = c(0.4, 0.5, 0.1))
# Sample 3 marbles WITHOUT replacement
# Run this chunk multiple times
sample_n(marbles, size = 3, replace = FALSE, weight = c(0.4, 0.5, 0.1))
# Sample 3 marbles WITHOUT replacement
# Run this chunk multiple times
sample_n(marbles, size = 3, replace = FALSE, weight = c(0.4, 0.5, 0.1))
# Sample 3 marbles WITHOUT replacement
# Run this chunk multiple times
sample_n(marbles, size = 3, replace = FALSE, weight = c(0.4, 0.5, 0.1))
# Sample 50 marbles WITH replacement
# Store the results
run_50 <- sample_n(marbles, size = 50, replace = TRUE, weight = c(0.4, 0.5, 0.1))
# Check out the first 6 experiments
head(run_50)
# Tabulate the observed colors
run_50 %>%
tabyl(color)
# Calculate the proportions of the observed colors
run_50 %>%
tabyl(color) %>%
adorn_totals("row")
# Plot the number of each color
ggplot(run_50, aes(x = color)) +
geom_bar()
# Load packages
library(ggplot2)
library(dplyr)
library(janitor)
set.seed(354)
dice <- data.frame(side = c(1, 2, 3, 4, 5, 6))
rolls <- sample_n(dice, size = 10000, replace = TRUE)
# Visual summary
ggplot(rolls, aes(x = side)) +
geom_bar() +
theme_classic()
# Numerical summary
rolls %>%
tabyl(side) %>%
adorn_totals("row")
event <- rolls %>%
filter(side < 4)
sum(event$side < 3)/nrow(event)
bdays <- data.frame(day = 1:365)
# Set the seed
set.seed(1997)
# Simulate 23 birthdays
one_room <- sample_n(bdays, size = 23, replace = TRUE)
# Display your resulting birthday sample
one_room
one_room %>%
tabyl(day) %>%
adorn_totals("row")
one_room %>%
summarize(number_unique = length(unique(day)), share = number_unique < 23)
one_room %>%
summarize(number_unique = length(unique(day)), share = number_unique < 23)
# Set the seed
set.seed(2)
# Simulate birthdays for 10000 separate rooms of 23 people
# And label the samples / rooms
many_rooms <- sample_n(bdays, size = 23*10000, replace = TRUE) %>%
group_by(sample = rep(1:10000, 23))
# Record whether at least 2 people share a bday in each of the 10000 rooms
results <- many_rooms %>%
mutate(share = unique(sample)) %>%
summarize(share)
results %>%
tabyl(share) %>%
adorn_totals("row")
# Set the seed
set.seed(2)
# Simulate birthdays for 10000 separate rooms of 23 people
# And label the samples / rooms
many_rooms <- sample_n(bdays, size = 23*10000, replace = TRUE) %>%
group_by(sample = rep(1:10000, 23))
# Record whether at least 2 people share a bday in each of the 10000 rooms
results <- many_rooms %>%
mutate(share = unique(day)) %>%
summarize(share)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(gplots)
# Starbucks locations
Starbucks <- read_csv("https://www.macalester.edu/~ajohns24/data/starbucks.csv")
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggmap)
library(GGally)
airlines <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/airlines.csv")
airports <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/airports.csv")
flights <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/flights_jan_jul_sample2.csv")
place_data <- left_join(flights, airports, by=c("ORIGIN_AIRPORT", "IATA_CODE"))
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggmap)
library(GGally)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(ggmap)
library(GGally)
airlines <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/airlines.csv")
airports <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/airports.csv")
flights <- read_csv("https://bcheggeseth.github.io/112_fall_2022/data/flights_jan_jul_sample2.csv")
names(airports)
flights <- flights %>% mutate(IATA_CODE = ORIGIN_AIRPORT)
place_data <- left_join(left_join(flights, airports, by =  "IATA_CODE"), airlines)
ggplot(place_data) +
geom_density(aes(x = DEPARTURE_DELAY))
ggplot(place_data) +
geom_density(aes(x = DEPARTURE_DELAY))
ggplot(place_data, aes(x = SCHEDULED_TIME, y = DEPARTURE_DELAY, color = LONGITUDE), alpha = 0.5) +
geom_point()
ggplot(place_data, aes(x = SCHEDULED_TIME, y = DEPARTURE_DELAY, color = LATITUDE), alpha = 0.5) +
geom_point()
ggplot(place_data, aes(x = DEPARTURE_DELAY, color = DAY_OF_WEEK)) +
geom_density() +
xlim(0, 150) +
facet_wrap(~DAY_OF_WEEK)
ggplot(place_data, aes(x = DEPARTURE_DELAY, color = MONTH)) +
geom_density() +
xlim(0, 150) +
facet_wrap(~MONTH)
ggplot(place_data, aes(x = SCHEDULED_DEPARTURE, y = DEPARTURE_DELAY)) +
geom_point() +
geom_smooth() +
facet_wrap(~DAY_OF_WEEK)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
scores <- read.csv('compas-scores-raw.csv')
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
View(violent)
View(scores)
View(fair_ml)
View(scores)
View(fair_ml)
race_score <- scores %>%
group_by(race) %>%
summarize(avg_score = mean(DecileScore))
race_score <- scores %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = race, y = avg_score)) +
geom_bar(stat = 'identity')
race_score <- scores %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score)) +
geom_bar(stat = 'identity')
race_score <- scores %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity')
race_score <- scores %>%
mutate(Ethnic_Code_Text = if{Ethnic_Code_Text == "African_Am"}(
race_score <- scores %>%
mutate(Ethnic_Code_Text = if(Ethnic_Code_Text == "African_Am"){
Ethnic_Code_Text = "African_American"
} else{
Ethnic_Code_Text = Ethnic_Code_Text
})
race_score <- scores %>%
mutate(Ethnic_Code_Text = if(Ethnic_Code_Text == "African_Am"){
Ethnic_Code_Text = "African_American"
} else{
Ethnic_Code_Text = Ethnic_Code_Text
}) %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score <- scores %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African_Am","African_American",Ethnic_Code_Text)) %>%
filter(DisplayText = "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score <- scores %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African_Am","African_American",Ethnic_Code_Text)) %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity')
race_score <- scores %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text)) %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity')
library(tidyverse)
library(ggplot2)
library(lubridate)
scores <- read.csv('compas-scores-raw.csv')
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
sex_scores <- scores %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
head(sex_scores)
ggplot(data = sex_scores) +
geom_col(aes(x = Sex_Code_Text, y = avg_score))
race_score <- scores %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text)) %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity')
library(tidyverse)
library(ggplot2)
library(lubridate)
scores <- read.csv('compas-scores-raw.csv')
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
sex_scores <- scores %>%
filter(str_detect(DisplayText, "Risk of Recidivism")) %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
head(sex_scores)
ggplot(data = sex_scores) +
geom_col(aes(x = Sex_Code_Text, y = avg_score))
race_score <- scores %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text)) %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity')
scores <- read.csv('compas-scores-raw.csv') %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text))
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
race_score_recidivism <- scores %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_violence <- scores %>%
filter(DisplayText == "Risk of Violence") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_fail_appear <- scores %>%
filter(DisplayText == "Risk of Failure to Appear") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
title("Risk of Recidivism Score")
ggplot(race_score, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score")
ggplot(race_score_violence, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence")
ggplot(race_score_fail_appear, aes(x = Ethnic_Code_Text, y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear")
ggplot(race_score, aes(x = reorder(Ethnic_Text_Code, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score")
ggplot(race_score, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score")
ggplot(race_score_violence, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence")
ggplot(race_score_fail_appear, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear")
ggplot(race_score, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_violence, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_fail_appear, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_violence, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_fail_appear, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
sex_score_recidivism <- scores %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
sex_score_violence <- scores %>%
filter(DisplayText == "Risk of Violence") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
sex_score_fail_appear <- scores %>%
filter(DisplayText == "Risk of Failure to Appear") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(data = sex_score_recidivism) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Recidivism Score")
ggplot(data = sex_score_violence) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Violence")
ggplot(data = sex_score_fail_appear) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Failure to Appear")
race_score_recidivism <- scores %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_violence <- scores %>%
filter(DisplayText == "Risk of Violence") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_fail_appear <- scores %>%
filter(DisplayText == "Risk of Failure to Appear") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_violence, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_fail_appear, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(lubridate)
scores <- read.csv('compas-scores-raw.csv') %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text)) %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "Oriental","Asian", Ethnic_Code_Text))
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
sex_score_recidivism <- scores %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
sex_score_violence <- scores %>%
filter(DisplayText == "Risk of Violence") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
sex_score_fail_appear <- scores %>%
filter(DisplayText == "Risk of Failure to Appear") %>%
group_by(Sex_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(data = sex_score_recidivism) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Recidivism Score")
ggplot(data = sex_score_violence) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Violence")
ggplot(data = sex_score_fail_appear) +
geom_col(aes(x = Sex_Code_Text, y = avg_score)) +
labs(title = "Risk of Failure to Appear")
race_score_recidivism <- scores %>%
filter(DisplayText == "Risk of Recidivism") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_violence <- scores %>%
filter(DisplayText == "Risk of Violence") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
race_score_fail_appear <- scores %>%
filter(DisplayText == "Risk of Failure to Appear") %>%
group_by(Ethnic_Code_Text) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_score_recidivism, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Recidivism Score", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_violence, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Violence", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
ggplot(race_score_fail_appear, aes(x = reorder(Ethnic_Code_Text, -avg_score), y = avg_score, fill = Ethnic_Code_Text)) +
geom_bar(stat = 'identity') +
labs(title = "Risk of Failure to Appear", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
total_avg <- mean((race_score_violence %>% filter(Ethnic_Code_Text != "African-American"))$avg_score)
aa_avg <- mean((race_score_violence %>% filter(Ethnic_Code_Text == "African-American"))$avg_score)
aa_avg / total_avg
knitr::opts_chunk$set(echo = TRUE)
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
library(tidyverse)
library(ggplot2)
library(lubridate)
scores <- read.csv('compas-scores-raw.csv') %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "African-Am","African-American", Ethnic_Code_Text)) %>%
mutate(Ethnic_Code_Text = if_else(Ethnic_Code_Text == "Oriental","Asian", Ethnic_Code_Text))
violent <- read.csv('cox-violent-parsed.csv')
fair_ml <- read.csv('propublica_data_for_fairml.csv')
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="dodge", stat="identity")
View(race_scores_all)
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(data, aes(fill=DisplayText, y=avg_score, x=Ethnic_Code_Text)) +
geom_bar(position="dodge", stat="identity")
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=DisplayText, y=avg_score, x=Ethnic_Code_Text)) +
geom_bar(position="dodge", stat="identity")
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=reorder(name, -DisplayText), y=avg_score, x=Ethnic_Code_Text)) +
geom_bar(position="dodge", stat="identity")
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=reorder(Ethnic_Code_Text, -DisplayText), y=avg_score, x=Ethnic_Code_Text)) +
geom_bar(position="dodge", stat="identity")
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=DisplayText, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity")
race_scores_all <- scores %>%
group_by(Ethnic_Code_Text, DisplayText) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=DisplayText, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "Risk of Violence", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText)
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText) %>%
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=`Score Type`, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "Risk of Violence", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2))
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText) %>%
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=`Score Type`, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "COMPAS Risk Score Averages By Race", x = "Race", y = "Average Score") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
scale_fill_manual(values = c("#2e282a", "#EF3E36", "#17BEBB"))
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText) %>%
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=`Score Type`, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "COMPAS Risk Score Averages By Race", x = "Race", y = "Average Score (Maximum of 10)") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
scale_fill_manual(values = c("#2e282a", "#EF3E36", "#17BEBB"))
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText) %>%
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=`Score Type`, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "COMPAS Risk Score Averages By Race", x = "Race", y = "Average Score (Maximum of 10)") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
scale_fill_manual(values = c("#2e282a", "#EF3E36", "#17BEBB")) +
theme_bw()
race_scores_all <- scores %>%
mutate(`Score Type` = DisplayText) %>%
group_by(Ethnic_Code_Text, `Score Type`) %>%
summarize(avg_score = mean(DecileScore))
ggplot(race_scores_all, aes(fill=`Score Type`, y=avg_score, x=reorder(Ethnic_Code_Text, -avg_score))) +
geom_bar(position="dodge", stat="identity") +
labs(title = "COMPAS Risk Score Averages By Race", x = "Race", y = "Average Score (Maximum of 10)") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
scale_fill_manual(values = c("#2e282a", "#EF3E36", "#17BEBB")) +
theme_light()
shiny::runApp('C:/Users/16125/Desktop/Senior Year/Semester 1/Intro Data Science/Practice')
runApp('C:/Users/16125/Desktop/Senior Year/Semester 1/Intro Data Science/Practice')
runApp('C:/Users/16125/Desktop/Senior Year/Semester 1/Intro Data Science/Practice')
